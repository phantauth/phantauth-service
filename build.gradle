buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'net.ltgt.apt' version '0.15'
    id 'idea'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id "org.sonarqube" version "2.6"
}

apply plugin: 'net.ltgt.apt-idea'

sourceCompatibility = 1.8
mainClassName = 'com.github.phantauth.service.PhantAuthServer'

ext {
    slf4jVersion = '1.7.25'
    jettyVersion = '9.4.11.v20180605'
    jerseyVersion = '2.27'
    swaggerVersion = '1.5.21'
}

repositories {
    jcenter()
}

sourceSets {
    main {
    }

    test {
    }
}

dependencies {
    implementation 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    compileOnly 'org.immutables:value:2.7.1'
    annotationProcessor 'org.immutables:value:2.7.1'

    compileOnly 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'

    annotationProcessor "org.projectlombok:lombok:1.18.2"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.2"

    implementation 'com.google.dagger:dagger:2.21'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.21'

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlets:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-rewrite:${jettyVersion}"

    implementation "io.swagger:swagger-annotations:${swaggerVersion}"
    implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.6'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.6'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.8.8'
    implementation group: 'com.google.guava', name: 'guava', version: '26.0-jre'

    implementation 'com.devskiller:jfairy:0.6.2'
    implementation 'org.passay:passay:1.3.1'
    implementation 'com.github.javafaker:javafaker:0.16'

    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '6.0.1'
    implementation 'com.nimbusds:oauth2-oidc-sdk:5.64.4'

    implementation 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'

    implementation 'org.minidns:minidns-hla:0.3.4'

    implementation 'org.hashids:hashids:1.0.3'

    implementation 'com.damnhandy:handy-uri-templates:2.1.7'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.5.7'

    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.2', ext: 'pom'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.2-groovy-2.4'
    testCompile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testRuntime "net.bytebuddy:byte-buddy:1.6.5"
    testRuntime "org.objenesis:objenesis:2.5.1"

    testCompile 'org.gebish:geb-spock:2.3.1'
    testCompile "org.seleniumhq.selenium:htmlunit-driver:2.33.3"
    testRuntime "org.seleniumhq.selenium:selenium-support:3.14.0"
    testCompile "org.gebish:geb-junit4:2.3.1"
    testCompile "junit:junit-dep:4.8.2"
}

shadowJar {
    exclude '*groovy*jar'
    exclude '*spock*jar'
}

task stage(dependsOn: ['shadowJar', 'test', 'build', 'clean'])
build.mustRunAfter clean

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

/*
jacoco {
    applyTo run
}

jacocoTestReport {
    executionData files(new File(project.buildDir, "jacoco").listFiles())
    reports {
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
    }
}
*/

/*
task smoke(type: Test, group: 'Verification') {
    testClassesDirs = sourceSets.smoke.output.classesDirs
    classpath = sourceSets.smoke.runtimeClasspath
    mustRunAfter integTest
}
*/

//test.finalizedBy jacocoTestReport
